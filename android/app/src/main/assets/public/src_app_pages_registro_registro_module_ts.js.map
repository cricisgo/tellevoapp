{"version":3,"file":"src_app_pages_registro_registro_module_ts.js","mappings":"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","sources":["./src/app/pages/registro/registro-routing.module.ts","./src/app/pages/registro/registro.module.ts","./src/app/pages/registro/registro.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistroPage } from './registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistroPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistroPageRoutingModule } from './registro-routing.module';\n\nimport { RegistroPage } from './registro.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RegistroPageRoutingModule\n  ],\n  declarations: [RegistroPage]\n})\nexport class RegistroPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { StorageService , Usuario } from '../services/storage.service'\nimport { NavController, ToastController, AlertController } from '@ionic/angular';\nimport {\n  FormGroup, FormControl, Validators, FormBuilder\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.page.html',\n  styleUrls: ['./registro.page.scss'],\n})\nexport class RegistroPage implements OnInit {\n\n  formularioRegistro: FormGroup; \n  newUsuario: Usuario = <Usuario>{};\n  usuarios : Usuario[] = [];\n\n\n  constructor(private alertController: AlertController,\n              private registroService: StorageService,\n              private navController: NavController,\n              private toast: ToastController, \n              private fb:FormBuilder) {\n                this.formularioRegistro = this.fb.group({\n                  'nombre' : new FormControl(\"\", Validators.required), \n                  'correo' : new FormControl(\"\", [Validators.required, Validators.email]), \n                  'password': new FormControl(\"\", Validators.compose([\n                    Validators.required,\n                    Validators.minLength(6),\n                    Validators.maxLength(20),\n                    Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')\n                  ])), \n                  'direccion': new FormControl(\"\", Validators.required),\n                  'rol': new FormControl(\"\", Validators.required),\n                  'lunes': new FormControl(\"\", Validators.required),\n                  'martes': new FormControl(\"\", Validators.required),\n                  'miercoles': new FormControl(\"\", Validators.required),\n                  'jueves': new FormControl(\"\", Validators.required),\n                  'viernes': new FormControl(\"\", Validators.required),\n                  'sabado': new FormControl(\"\", Validators.required),\n                })\n               }\n\n  ngOnInit() {\n  }\n\n  async CrearUsuario(){\n    var form = this.formularioRegistro.value;\n    var repetido = 0;\n\n    if (this.formularioRegistro.invalid){\n      this.alertError();\n    }\n\n    else{\n    this.newUsuario.nomUsuario = form.nombre;\n    this.newUsuario.correoUsuario = form.correo;\n    this.newUsuario.passUsuario = form.password;\n    this.newUsuario.rolUsuario = form.rol;\n    this.newUsuario.dirUsuario = form.direccion;\n    this.newUsuario.lu = form.lunes;\n    this.newUsuario.ma = form.martes;\n    this.newUsuario.mi = form.miercoles;\n    this.newUsuario.ju = form.jueves;\n    this.newUsuario.vi = form.viernes;\n    this.newUsuario.sa = form.sabado;\n\n    this.registroService.getUsuarios().then(datos=>{ \n    this.usuarios = datos; \n\n    if (!datos || datos.length==0){\n      this.registroService.addUsuario(this.newUsuario).then(dato=>{ \n        this.newUsuario=<Usuario>{};\n        this.showToast('Usuario Creado satisfactoriamente');\n      });\n      this.formularioRegistro.reset();\n      this.navController.navigateRoot('login');\n    }else{\n    \n    for (let obj of this.usuarios){\n      if (this.newUsuario.correoUsuario == obj.correoUsuario){\n        repetido = 1;\n      }\n    }//Fin del for\n  \n      if (repetido == 1){\n        this.alertCorreoExistente();\n        this.formularioRegistro.reset();\n      }\n      else{\n        \n        this.registroService.addUsuario(this.newUsuario).then(dato=>{ \n          this.newUsuario=<Usuario>{};\n          this.showToast('Usuario Creado satisfactoriamente');\n        });\n\n        this.formularioRegistro.reset();\n        this.navController.navigateRoot('login');\n\n      }\n    }\n    })  \n  \n  }//finelse\n\n  }//findelmetodo\n\n  async alertError(){\n    const alert = await this.alertController.create({ \n      header: '¡Error!',\n      message: 'Debe completar todos los datos',\n      buttons: ['Aceptar']\n    })\n    await alert.present();\n  }\n\n  async alertCorreoExistente(){\n    const alert = await this.alertController.create({ \n      header: '¡Error!',\n      message: 'El correo ingresado ya fue registrado.',\n      buttons: ['Aceptar']\n    })\n    await alert.present();\n  }\n\n\n  async alertPass(){\n    const alert = await this.alertController.create({ \n      header: '¡Error!',\n      message: 'Las contraseñas deben coincidir',\n      buttons: ['Aceptar']\n    })\n    await alert.present();\n  }\n\n  async showToast(msg){\n    const toast = await this.toast.create({\n      message: msg,\n      duration: 2000\n    })\n    await toast.present();\n  }\n\n\n}"],"names":["Component","StorageService","NavController","ToastController","AlertController","FormControl","Validators","FormBuilder","RegistroPage","constructor","alertController","registroService","navController","toast","fb","formularioRegistro","group","required","email","compose","minLength","maxLength","pattern","ngOnInit","CrearUsuario","form","value","repetido","invalid","alertError","newUsuario","nomUsuario","nombre","correoUsuario","correo","passUsuario","password","rolUsuario","rol","dirUsuario","direccion","lu","lunes","ma","martes","mi","miercoles","ju","jueves","vi","viernes","sa","sabado","getUsuarios","then","datos","usuarios","length","addUsuario","dato","showToast","reset","navigateRoot","obj","alertCorreoExistente","alert","create","header","message","buttons","present","alertPass","msg","duration","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}